{"version":3,"sources":["webpack:///./src/pages/404.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/image.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Navbar.jsx","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Image","_ref","image","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fluid","childImageSharp","_public_static_d_4283674626_json__WEBPACK_IMPORTED_MODULE_0__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Main","styled","div","display","justifyContent","PageLinks","flex","padding","fontSize","Spacer","Navbar","react_default","className","gatsby_browser_entry","to","IMAGES","Layout","Fragment","components_Navbar","components_image","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,wGCTJV,EAAAY,EAAAV,EAAA,sBAAAW,IAAA,IAAAV,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAW,EAAAd,EAAA,GAAAe,EAAAf,EAAAK,EAAAS,GAAAE,EAAAhB,EAAA,IAAAiB,EAAAjB,EAAAK,EAAAW,GAAAhB,EAAAY,EAAAV,EAAA,sBAAAe,EAAAR,IAAAT,EAAA,SAYMkB,EAAqBC,IAAMC,cAAc,IAEzCP,EAAc,SAAAQ,GAAK,OACvBjB,EAAAK,EAAAC,cAACQ,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMG,MACLD,EAAgBF,EAAMI,QAAUF,EAAgBF,EAAMI,OAAOD,MAEtDH,EAAMK,QAAUL,EAAMM,UAC5BN,EAAMG,KAAOH,EAAMG,KAAKA,KAAOD,EAAgBF,EAAMI,OAAOD,MAGvDpB,EAAAK,EAAAC,cAAA,uCA4BfG,EAAYe,UAAY,CACtBJ,KAAMK,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,4HCezCK,EAAQ,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,MAAF,OACZC,EAAAjC,EAAAC,cAACiC,EAAA,EAAD,CACElB,MAAK,aAgCLC,OAAQ,SAAAF,GACN,OAAQkB,EAAAjC,EAAAC,cAACkC,EAAAnC,EAAD,CAAKoC,MAAOrB,EAAKiB,GAAOK,gBAAgBD,SAlCpDrB,KAAAuB,69ICVIC,EAAmB,SAAAR,GAAkB,IAAfS,EAAeT,EAAfS,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOlC,IAAMT,cAAc4C,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBpB,UAAY,CAC3BqB,SAAUpB,IAAU6B,MAAM,CACxBL,SAAUxB,IAAUE,OAAOC,aAC1BA,YAGUgB,6GCTf,SAASW,EAATnB,GAA2D,IAA5CoB,EAA4CpB,EAA5CoB,YAAaC,EAA+BrB,EAA/BqB,KAAMC,EAAyBtB,EAAzBsB,KAAMC,EAAmBvB,EAAnBuB,SAAUpD,EAAS6B,EAAT7B,MACxCqD,EADiDC,EAAAzC,KACjDwC,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACElB,EAAAjC,EAAAC,cAAC0D,EAAA3D,EAAD,CACE4D,eAAgB,CACdR,QAEFlD,MAAOA,EACP2D,cAAa,QAAUN,EAAKG,aAAaxD,MACzCmD,KAAM,CACJ,CACES,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAS7D,GAEX,CACE8D,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKG,aAAaO,QAE7B,CACEH,KAAI,gBACJC,QAAS7D,GAEX,CACE4D,KAAI,sBACJC,QAASN,IAGVS,OACCZ,EAASa,OAAS,EACd,CACEL,KAAI,WACJC,QAAST,EAASc,KAAT,OAEX,IAELF,OAAOb,KAKhBH,EAAImB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACNC,SAAU,GACVH,YAAW,IAGbD,EAAI/B,UAAY,CACdgC,YAAa/B,IAAUE,OACvB8B,KAAMhC,IAAUE,OAChB+B,KAAMjC,IAAUkD,QAAQlD,IAAUC,QAClCiC,SAAUlC,IAAUkD,QAAQlD,IAAUE,QACtCpB,MAAOkB,IAAUE,OAAOC,YAGX2B,mVC9FTqB,EAAOC,IAAOC,IAAI,CACtBC,QAAS,OACTC,eAAgB,SAGZC,EAAYJ,IAAOC,IAAI,CAC3BI,KAAM,UACNC,QAAS,UACTJ,QAAS,OACTC,eAAgB,eAChBI,SAAU,SAGNC,EAASR,IAAOC,IAAI,CACxBI,KAAM,YAgBOI,EAbA,kBACbC,EAAAlF,EAAAC,cAACsE,EAAD,KACEW,EAAAlF,EAAAC,cAAC2E,EAAD,CAAWO,UAAU,gBACnBD,EAAAlF,EAAAC,cAACmF,EAAA,EAAD,CAAMC,GAAG,KAAT,QACAH,EAAAlF,EAAAC,cAACmF,EAAA,EAAD,CAAMC,GAAG,YAAT,UACAH,EAAAlF,EAAAC,cAACmF,EAAA,EAAD,CAAMC,GAAG,gBAAT,cACAH,EAAAlF,EAAAC,cAACmF,EAAA,EAAD,CAAMC,GAAG,SAAT,OACAH,EAAAlF,EAAAC,cAACmF,EAAA,EAAD,CAAMC,GAAG,cAAT,aAEFH,EAAAlF,EAAAC,cAAC+E,EAAD,QChBEM,UACI,oBADJA,EAEI,mBAGJC,EAAS,SAAAxD,KAAG7B,MAAH,IAAUgB,EAAVa,EAAUb,SAAV,OACbgE,EAAAlF,EAAAC,cAAAiF,EAAAlF,EAAAwF,SAAA,KACEN,EAAAlF,EAAAC,cAACwF,EAAD,MACAP,EAAAlF,EAAAC,cAAA,OAAKkF,UAAY,aAChBD,EAAAlF,EAAAC,cAACyF,EAAA,EAAD,CAAO1D,MAAOsD,KAEfJ,EAAAlF,EAAAC,cAAA,YAAOiB,GACPgE,EAAAlF,EAAAC,cAAA,OAAKkF,UAAU,aACfD,EAAAlF,EAAAC,cAACyF,EAAA,EAAD,CAAO1D,MAAOsD,OAKlBC,EAAOpE,UAAY,CACjBD,SAAUE,IAAUuE,KAAKpE,YAGZgE","file":"component---src-pages-404-jsx-799f66492adfd1d1abb8.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = ({image}) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        navbarBackground: file(relativePath: { eq: \"navbar-bg-1.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1600) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        headerImage: file(relativePath: { eq: \"index-header.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1600) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        footerBackground: file(relativePath: { eq: \"footer-bg.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1600) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        zola: file(relativePath: { eq: \"zola-logo.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1600) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      return (<Img fluid={data[image].childImageSharp.fluid} />)\n    }}\n  />\n)\n\n\nexport { Image }\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from \"gatsby\";\n\nconst Main = styled.div({\n  display: 'flex',\n  justifyContent: 'left',\n})\n\nconst PageLinks = styled.div({\n  flex: '1 1 35%',\n  padding: '3rem 0 ',\n  display: 'flex',\n  justifyContent: 'space-around',\n  fontSize: '2rem',\n});\n\nconst Spacer = styled.div({\n  flex: '1 1 65%',\n})\n\nconst Navbar = () => (\n  <Main>\n    <PageLinks className='navbar-links'>\n      <Link to=\"/\">HOME</Link>\n      <Link to=\"/travel/\">TRAVEL</Link>\n      <Link to=\"/activities/\">ACTIVITIES</Link>\n      <Link to=\"/faq/\">FAQ</Link>\n      <Link to=\"/registry/\">REGISTRY</Link>\n    </PageLinks>\n    <Spacer />\n  </Main>\n)\n\nexport default Navbar;","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Image } from \"../components/image\";\n\nimport Navbar from './Navbar';\nimport \"./layout.css\"\n\nconst IMAGES = {\n  navbar: 'navbarBackground',\n  footer: 'footerBackground',\n}\n\nconst Layout = ({ title, children }) => (\n  <>\n    <Navbar />\n    <div className = 'navbar-bg'>\n     <Image image={IMAGES.navbar}/>\n    </div>\n    <main>{children}</main>\n    <div className='footer-bg'>\n    <Image image={IMAGES.footer}/>\n  </div>\n  </>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}