{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/image.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Navbar.jsx","webpack:///./src/components/layout.js","webpack:///./src/compartments/GridContainer.jsx","webpack:///./src/compartments/GridCells.jsx","webpack:///./src/components/Icon.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_image__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_compartments_GridContainer__WEBPACK_IMPORTED_MODULE_4__","_compartments_GridCells__WEBPACK_IMPORTED_MODULE_5__","_components_Icon__WEBPACK_IMPORTED_MODULE_6__","react_icons_fi__WEBPACK_IMPORTED_MODULE_7__","IMAGES","IndexPage","a","createElement","title","className","image","style","width","margin","columns","size","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Image","_ref","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fluid","childImageSharp","_public_static_d_4283674626_json__WEBPACK_IMPORTED_MODULE_0__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Main","styled","div","display","justifyContent","PageLinks","flex","padding","fontSize","Spacer","Navbar","react_default","gatsby_browser_entry","to","Layout","Fragment","components_Navbar","components_image","node","GridContainer","Container","this","Component","gridTemplateColumns","gridColumnGap","alignItems","GridCell","textAlign","react_icons__WEBPACK_IMPORTED_MODULE_1__","Icon","Provider","value","color"],"mappings":"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","file":"component---src-pages-index-jsx-397ca6a4cc7e316d1590.js","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\"\nimport { Image } from \"../components/image\";\nimport SEO from \"../components/seo\"\nimport GridContainer from '../compartments/GridContainer'\nimport { GridCell } from '../compartments/GridCells'\nimport Icon from '../components/Icon';\nimport { FiClock } from \"react-icons/fi\"\nimport { FiMapPin } from \"react-icons/fi\"\n\nconst IMAGES = {\n  navbar: 'navbarBackground',\n  header: 'headerImage',\n  footer: 'footerBackground',\n}\n\nconst IndexPage = () => (\n  <Layout title='Main'>\n    <SEO title=\"Hillary and Mark\" />\n    <div className='index-header-text'>\n      Hillary & Mark\n    </div>\n    <div className='index-header'>\n      <Image image={IMAGES.header} />\n    </div>\n    <div style={{width: '50%', margin: '0 auto'}}>\n      <GridContainer columns={2}>\n        <GridCell>\n          <h1 className=\"grid-cell-title\">WHEN</h1>\n          <Icon size=\"3rem\">\n            <FiClock />\n          </Icon>\n          <div>Saturday</div>\n          <div>September 28 2019</div>\n          <div>4:00 PM</div>\n        </GridCell>\n        <GridCell>\n          <h1 className=\"grid-cell-title\">WHERE</h1>\n          <Icon size=\"3rem\">\n            <FiMapPin />\n          </Icon>\n          <div>St. Francis Hall</div>\n          <div>1340 Quincy St NE</div>\n          <div>Washington, DC 20017</div>\n        </GridCell>\n      </GridContainer>\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = ({image}) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        navbarBackground: file(relativePath: { eq: \"navbar-bg-1.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1600) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        headerImage: file(relativePath: { eq: \"index-header.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1600) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        footerBackground: file(relativePath: { eq: \"footer-bg.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1600) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        zola: file(relativePath: { eq: \"zola-logo.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1600) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      return (<Img fluid={data[image].childImageSharp.fluid} />)\n    }}\n  />\n)\n\n\nexport { Image }\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from \"gatsby\";\n\nconst Main = styled.div({\n  display: 'flex',\n  justifyContent: 'left',\n})\n\nconst PageLinks = styled.div({\n  flex: '1 1 35%',\n  padding: '3rem 0 ',\n  display: 'flex',\n  justifyContent: 'space-around',\n  fontSize: '2rem',\n});\n\nconst Spacer = styled.div({\n  flex: '1 1 65%',\n})\n\nconst Navbar = () => (\n  <Main>\n    <PageLinks className='navbar-links'>\n      <Link to=\"/\">HOME</Link>\n      <Link to=\"/travel/\">TRAVEL</Link>\n      <Link to=\"/activities/\">ACTIVITIES</Link>\n      <Link to=\"/faq/\">FAQ</Link>\n      <Link to=\"/registry/\">REGISTRY</Link>\n    </PageLinks>\n    <Spacer />\n  </Main>\n)\n\nexport default Navbar;","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Image } from \"../components/image\";\n\nimport Navbar from './Navbar';\nimport \"./layout.css\"\n\nconst IMAGES = {\n  navbar: 'navbarBackground',\n  footer: 'footerBackground',\n}\n\nconst Layout = ({ title, children }) => (\n  <>\n    <Navbar />\n    <div className = 'navbar-bg'>\n     <Image image={IMAGES.navbar}/>\n    </div>\n    <main>{children}</main>\n    <div className='footer-bg'>\n    <Image image={IMAGES.footer}/>\n  </div>\n  </>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nexport default class GridContainer extends React.Component {\n\n  static Container = props => {\n    const Main = styled.div({\n      display: 'grid',\n      gridTemplateColumns: `repeat(${props.columns}, 1fr)`,\n      gridColumnGap: '10rem',\n      width: '90%',\n      padding: '0',\n      margin: '4rem auto',\n      justifyContent: 'center',\n      alignItems: 'center',\n    })\n\n    return <Main {...props} />\n  }\n\n  render(){\n    const { Container } = GridContainer;\n    return(\n      <Container columns={this.props.columns}>\n        {this.props.children}\n      </Container>\n    )\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled'\n\nconst Main = styled.div({\n  textAlign: 'center',\n  padding: '1rem',\n  fontSize: '2rem',\n})\n\nexport const GridCell = props => (\n  <Main>\n    {props.children}\n  </Main>\n);","import React from \"react\"\nimport { IconContext } from \"react-icons\"\n\n\nconst Icon = props => (\n  <IconContext.Provider value={{size: props.size, color: \"#071013\"}}>\n    <div>\n      {props.children}\n    </div>\n  </IconContext.Provider>\n)\n\nexport default Icon"],"sourceRoot":""}